# This is a basic workflow to help you get started with Actions


# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      run_number:
        description: "Specify run number"
        required: true
      version:
        description: "Module version to use"
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - run: echo ${{contains(github.base_ref, 'do')}}
        
      - run: echo ${{ github.event_name }}
      
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"

      - name: Set selected color
        run: echo '::set-output name=SELECTED_COLOR::d'
        id: random-color-generator
        
      - name: Get color
        if: steps.random-color-generator.outputs.SELECTED_COLOR
        run: echo 'The selected color is' ${{steps.random-color-generator.outputs.SELECTED_COLOR}}
        
      - name: Get color
        if: steps.random-color-generator.outputs.SELECTED_COLOR == ''
        run: echo 'The selected color is' ${{steps.random-color-generator.outputs.SELECTED_COLOR}}
        
              
      - name: Get color
        if: steps.random-color-generator.outputs.SELECTED_COLOR != ''
        run: echo 'The selected color is' ${{steps.random-color-generator.outputs.SELECTED_COLOR}}
        
          
